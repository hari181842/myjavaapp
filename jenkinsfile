pipeline {
  parameters {
  choice choices: ['dev', 'stg', 'master','pipeline'], description: 'Please select your branch', name: 'Branch'
}
    agent any
     environment {
  PATH = "/opt/maven/bin:$PATH"
}
    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }
		stage('checkout') {
		steps {
		checkout(
		[
		$class: 'GitSCM', 
		branches: [
		[name: "*/${Branch}"
		]
		], 
		extensions: [
		],
		userRemoteConfigs: [
		[
		credentialsId: 'Github', url: 'https://github.com/hari181842/myjavaapp.git']
		]
		]
		)
    }
}
  stage('build'){
  steps{
  sh 'mvn package'
  }
 }
 stage ('Artifact upload') {
 steps{
     script{
     def mavenPom = readMavenPom file: 'pom.xml'
     nexusArtifactUploader artifacts: 
    [
    [
     artifactId: 'hello-world-war', 
     classifier: '',
    file: "target/hello-world-war-${mavenPom.version}.war", 
    type: 'war'
 ]
 ], 
 credentialsId: 'Nexus-cred',
 groupId: 'com.efsavage',
 nexusUrl: '3.109.229.170:8081', 
 nexusVersion: 'nexus3', 
 protocol: 'http', 
 repository: 'my-repo', 
 version: "${mavenPom.version}" 
     }
   }
  }
  stage('rename') {
     steps {
        sh' mv /target/*.war /target/hello.war'
      }
  }
  stage('execuite playbook') {
    steps {
       ansiblePlaybook credentialsId: 'ansible_cred', disableHostKeyChecking: true, installation: 'ansible', inventory: 'myinv', playbook: 'tomcat.yml'
  }
}
